% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_graphUI.R
\name{mod_graphUI}
\alias{mod_graphUI}
\alias{mod_graph}
\title{mod_graph and mod_graphUI  function}
\usage{
mod_graphUI(id)

mod_graph(input, output, session, data)
}
\arguments{
\item{id}{The id of the current element you are entering}

\item{input}{internal}

\item{output}{internal}

\item{session}{internal}

\item{data}{dataset as reactive}
}
\description{
Shiny Module that allows to see variable distributions or variable corrrelations.
}
\examples{
if (interactive()){
library(shiny)
library(cleanser)
library(readr)
library(DT)
ui <- fluidPage(
  titlePanel("Example: mod_graphUI"),
  selectInput("go","change data",c("boys",
                                   "vins",
                                   "vins_missing",
                                   "one_factor",
                                   "right_csv",
                                   "right_xls",
                                   "demo2_csv",
                                   "demo3_xlsx",
                                   "demo4_rds"
  )),
  mod_graphUI("truc2"),
  tags$div(class="table-wrapper", DTOutput("tableau"))
)

server <- function(input, output,session) {
  
  donnee <- reactive({
    
    md <- function(x){system.file("dataset",x,package = "cleanser")}
    switch (input$go,
            "boys" = readr::read_csv(md("boys.csv")) \%>\% dplyr::mutate_all(as.factor),
            "vins" = readr::read_csv(md("vins.csv")),
            "vins_missing" = readr::read_csv(md("vins_missing.csv"), 
            locale = locale(encoding = 'ISO-8859-1')),
            "one_factor" = readr::read_csv(md("one_factor.csv")),
            "right_csv" = readr::read_csv(md("right.csv")),
            "right_xls" = readxl::read_excel(md("right.xls"),1),
            "demo2_csv" = readr::read_delim(md("demo2.csv"), 
            locale = locale(encoding = 'ASCII'), delim=";"),
            "demo4_rds" = readr::read_rds(md("demo4.rds")),
            "demo3_xlsx" = readxl::read_excel(md("demo3.xlsx"),1)
    )
  })
  output$tableau <- renderDT({
    
    datatable(
      donnee(), 
      selection = list(target="column"), 
      options = list(ordering = FALSE,
                     preDrawCallback = JS("function() { 
                                          Shiny.unbindAll(this.api().table().node()); }"),
                     drawCallback = JS("function() { Shiny.bindAll(this.api().table().node());
}")
        )
    )
})
  updateDate <- reactive({
    list(df = donnee(), selected = as.numeric(input$tableau_columns_selected))
  })
  
  
  
  callModule(mod_graph, "truc2", reactive({updateDate()}))
  }
# Run the application
shinyApp(ui = ui, server = server)
}
}
